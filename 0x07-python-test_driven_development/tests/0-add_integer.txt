# 0-add_integer.txt
____________________

This text file will be used to test a module that defines an integer addition function 

``add_integer(...)``` returns the addition of its two arguments. For number data types, the
result is similar to the sum of both numbers

=========================================================================================

importing the file 

>>> add_integer = __import__('0-add_integer').add_integer

Examples:
==========================================================================================

passing Integer Arguments:
__________________________		

>>> add_integer(2, 3)
5

>>> add_integer(2, -3)
-1

___________________________

Passing Floats as arguments:
____________________________

>>> add_integer(2.0, 3.0)
5

Note: floats are casted to ints before addition is performed.

>>> add_integer(2.9, 0.2)
2


>>> add_integer(-2.9, -0.2)
-2

_____________________________

Passing Floats and Ints as args:
______________________________

>>> add_integer(2.3, -3)
-1

____________________________

Passing only one argument 
____________________________

>>> add_integer(2)
100

____________________________

Passing strings
____________________________

``add_integer()`` expects that both arguments are either integers or floats.
If either argument is a non-integer and non-float, a TypeError is raised:

>>> add_integer("hello", 3)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(2, "hello")
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(2.3, None)
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer("hello", "there")
Traceback (most recent call last):
TypeError: a must be an integer

____________________________

Passing Infinity and NaN
____________________________

>>> add_integer(float('inf'))
Tracback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(2, float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

>>> add_integer(2, float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer
